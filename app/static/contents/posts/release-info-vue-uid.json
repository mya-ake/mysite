{"title":"vue-uid というコンポーネントで使えるユニーク ID を持たせるプラグインを作った","description":"Vue.js のプラグイン vue-uid を作ったのでそのリリース告知 &amp; 軽い使い方の記事です。vue-uid はマウントされたコンポーネントごとにユニークな ID を持たせられるので、 id 属性のユニークな値として利用できます。","body":"<h2 id=\"ざっくりどんなプラグイン？\">ざっくりどんなプラグイン？</h2><p>Vue.js のコンポーネントの id 属性とかで使えるユニークな ID が必要なときがあるじゃないですか。\nこれを解決するプラグインが<a href=\"https://www.npmjs.com/package/vue-uid\">vue-uid</a>です。</p>\n<h2 id=\"コンポーネントにユニークな_ID_がないとどうなるか？\">コンポーネントにユニークな ID がないとどうなるか？</h2><p>たとえば次のようなフォームの要素コンポーネント（BaseInputText）があったとします。</p>\n<pre><code class=\"hljs lang-HTML\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"input\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">slot</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"input\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n</code></pre>\n<p>このコンポーネントを使って次のフォームを作ったとします。</p>\n<pre><code class=\"hljs lang-HTML\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">v-on:submit.prevent</span>=<span class=\"hljs-string\">\"handleSubmit\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">base-input-text</span>&gt;</span>項目1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">base-input-text</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">base-input-text</span>&gt;</span>項目2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">base-input-text</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"submit\"</span>&gt;</span>送信<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"actionscript\">\n<span class=\"hljs-comment\">// 省略</span>\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n<p>そして実際に展開される HTML は次のような形になります。</p>\n<pre><code class=\"hljs lang-HTML\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"input\"</span>&gt;</span>項目1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"input\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"input\"</span>&gt;</span>項目2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"input\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"submit\"</span>&gt;</span>送信<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n</code></pre>\n<p>見事に ID 重複してしまいますね。</p>\n<h2 id=\"vue-uid_を使うと\">vue-uid を使うと</h2><p>vue-uid プラグインを使うと、コンポーネントの this に <code>$_uid</code> プロパティが生えます。\nこの <code>$_uid</code> には他のコンポーネントと重複しない id（数値）が入っています。\nscript ブロック内では <code>this.$_uid</code> でアクセスできます。\nまた template ブロックでは <code>$_uid</code> でアクセスできます。</p>\n<p>※プロパティ名は<a href=\"https://www.npmjs.com/package/vue-uid#name\">name オプション</a>で変更できます。</p>\n<p>この vue-uid を使ったときの BaseInputText は次のようになります。</p>\n<pre><code class=\"hljs lang-HTML\"><span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">v-bind:for</span>=<span class=\"hljs-string\">\"`input-$</span></span></span><span class=\"hljs-template-variable\">{$_uid}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">`\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">slot</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">v-bind:id</span>=<span class=\"hljs-string\">\"`input-$</span></span></span><span class=\"hljs-template-variable\">{$_uid}</span><span class=\"xml\"><span class=\"hljs-tag\"><span class=\"hljs-string\">`\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span></span>\n</code></pre>\n<p>または次のように computed でまとめてしまいます。</p>\n<pre><code class=\"hljs lang-HTML\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">v-bind:for</span>=<span class=\"hljs-string\">\"inputId\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">slot</span>/&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">v-bind:id</span>=<span class=\"hljs-string\">\"inputId\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-attr\">computed</span>: {\n    inputId() {\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`input-<span class=\"hljs-subst\">${<span class=\"hljs-keyword\">this</span>.$_uid}</span>`</span>;\n    },\n  },\n};\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n<p>フォームのところはとくに変わらないので省略します。</p>\n<p>展開されるとこんな感じになります。</p>\n<pre><code class=\"hljs lang-HTML\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"input-1\"</span>&gt;</span>項目1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"input-1\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">\"input-2\"</span>&gt;</span>項目2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"input-2\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"\"</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"submit\"</span>&gt;</span>送信<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n</code></pre>\n<p>これで各 input タグの id 属性がユニークになりました。</p>\n<h2 id=\"使い方\">使い方</h2><p>npm か yarn でインストール可能です。\nブラウザでは <a href=\"https://github.com/mya-ake/vue-uid/blob/master/dist/vue-uid.umd.min.js\">vue-uid.umd.min.js</a>をコピーすることで使えると思います（試してはないですがいけると思われる）。</p>\n<pre><code class=\"hljs lang-bash\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> npm i vue-uid</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> or</span>\n<span class=\"hljs-meta\">$</span><span class=\"bash\"> yarn add vue-uid</span>\n</code></pre>\n<p>あとは他の Vue.js のプラグインと同様に <code>Vue.use()</code> で指定してください。</p>\n<pre><code class=\"hljs lang-JavaScript\"><span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>;\n<span class=\"hljs-keyword\">import</span> VueUid <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue-uid'</span>;\n\nVue.use(VueUid);\n</code></pre>\n<h2 id=\"Nuxt.js_版\">Nuxt.js 版</h2><p>Nuxt.js 用にラップした<a href=\"https://www.npmjs.com/package/nuxt-uid-module\">nuxt-uid-module</a>も作りました。\nNuxt.js で利用する際はこっちを使ってください。</p>\n<p>SPA モードであれば問題ないのですが、普通に vue-uid の方を使ってしまうとクライアントとサーバーで id が異なってしまいます。</p>\n<p>uid はシングルトンで管理されているのでサーバーではリクエストごとに uid が増えていってしまう問題があります。\nそのためリクエストの度に uid をリセットしないと クライアントとサーバーでずれが発生します。</p>\n<p>このモジュールはリクエストの度に自動で uid をリセットするようになっているので、Nuxt.js で利用される場合は nuxt-uid-module の方を使ってください。</p>\n<h2 id=\"まとめ\">まとめ</h2><p>自分のプロジェクトで毎回のように必要になってたので、npm で公開して自分で使いやすくした感じです。\n必要な際はぜひ使ってみてください。</p>\n<h2 id=\"補足：今回の例には回避策がある\">補足：今回の例には回避策がある</h2><p>最初に例示したフォームの要素の id 重複のところです。\nこれは label タグで input タグを囲ってしまえば id 属性が不要になるので重複回避可能です。</p>\n<p>馴染みやすい例がいいと思いフォームの例を使いました。</p>\n<p>他の例示をするなら WAI-ARIA の <a href=\"https://momdo.github.io/wai-aria/states_and_properties.html#aria-controls\">aria-controls プロパティ</a>で id 属性を利用します。\n他にも id 属性を利用する WAI-ARIA のプロパティは多いです（コンポーネントに WAI-ARIA のプロパティを付与するときは id 重複に注意しましょう）。</p>\n<p>このように id 属性が必要な場面はそれなりにあるので、ぜひ vue-uid を使ってみてください。</p>\n<h2 id=\"余談：Vue_CLI_v3_使うと_Vue.js_のプラグインを作るのも簡単\">余談：Vue CLI v3 使うと Vue.js のプラグインを作るのも簡単</h2><p>vue-uid は Vue CLI v3 をベースに作っています。\nVue CLI v3 のビルドのオプションにライブラリ用のものがあるのでそれを利用しました。\n次のようにビルドすることで各環境に合わせたビルドが出力されるのでとても便利です。</p>\n<pre><code class=\"hljs lang-bash\">$ vue-cli-service build --target <span class=\"hljs-class\"><span class=\"hljs-keyword\">lib</span> --<span class=\"hljs-title\">name</span> <span class=\"hljs-title\">vue</span>-<span class=\"hljs-title\">uid</span> <span class=\"hljs-title\">src</span>/<span class=\"hljs-title\">index</span>.<span class=\"hljs-title\">js</span></span>\n</code></pre>\n<p>ドキュメントはこちらになるのでご興味ある方は一読されるとよいかもしれません。</p>\n<p><a href=\"https://cli.vuejs.org/guide/build-targets.html#library\">https://cli.vuejs.org/guide/build-targets.html#library</a></p>\n<h2 id=\"余談2：Nuxt.js_の_axios_ラッパーモジュールも作ってる\">余談2：Nuxt.js の axios ラッパーモジュールも作ってる</h2><p>ご存知の方もいるかもしれませんが<a href=\"https://www.npmjs.com/package/nuxt-resource-module\">nuxt-resource-module</a>というのも作ってます。</p>\n<p>これは axios を拡張した感じのラッパーです。</p>\n<p>特徴としては</p>\n<ul>\n<li>asyncData のリクエストを遷移確定後に遅らせることが可能<ul>\n<li>プリフェッチの待機時間がなくなるので遷移が早くなる</li>\n</ul>\n</li>\n<li>リクエストのキャンセル処理を手軽に書ける<ul>\n<li>axios の CancelToken 周りの処理を内包</li>\n</ul>\n</li>\n</ul>\n<p>って感じです。</p>\n<p>今、プロダクトで使いはじめようとしてるところで、使いつつ API の調整をしていく段階です。\n今α版という位置づけですが使ってみてのご意見もお待ちしてます。</p>\n<p>一応正式版出したら改めて記事を書くので詳細はお待ちください。</p>","thumbnail":"","twitterCardType":"","createdAt":"2018-11-17"}