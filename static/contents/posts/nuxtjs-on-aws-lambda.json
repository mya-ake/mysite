{"title":"Nuxt.js on AWS Lambda","description":"Vue.jsのユニバーサルアプリケーションを作るためのフレームワークであるNuxt.jsをAWS Lambdaで動かす方法について書かれている記事です。","body":"<p></p>\n<h2 id=\"この記事について\">この記事について</h2><p>この記事は<a href=\"https://qiita.com/advent-calendar/2017/vue2\">Vue.js #2 Advent Calendar 2017 - Qiita</a>の12日目の記事です。</p>\n<p>この記事では <a href=\"https://nuxtjs.org/\">Nuxt.js</a> を <a href=\"https://aws.amazon.com/jp/lambda/\">AWS Lambda</a> で動かす方法について書いています。\nNuxt.js は Vue.js のユニバーサルアプリケーションを作ることができるフレームワークです。\nAWS Lambda は使った分だけ課金される FaaS (Function as a Service) と言われる AWS のコンピューティングサービスです。</p>\n<p>今回この2つについて簡単に説明し、なぜSSRするかという話もして、動かすための実装コードの説明していくという盛り沢山な内容になっています。</p>\n<h3 id=\"対象読者\">対象読者</h3><ul>\n<li>Vue.js のSSR（サーバーサイドレンダリング）に興味がある方</li>\n<li>Nuxt.js をどういうサーバーで稼働させようか考えている方</li>\n<li>AWS Lambdaでやろうとして上手くいかなかった方</li>\n</ul>\n<h3 id=\"登場人物?たち\">登場人物?たち</h3><ul>\n<li>Nuxt.js</li>\n<li>AWS Lambda</li>\n<li><a href=\"https://serverless.com/\">Serverless Framework</a></li>\n</ul>\n<h3 id=\"アウトライン\">アウトライン</h3><ul>\n<li><a href=\"#Nuxt.js\">Nuxt.js</a></li>\n<li><a href=\"#AWS_Lambda\">AWS Lambda</a></li>\n<li><a href=\"#Serverless_Framework\">Serverless Framework</a></li>\n<li><a href=\"#なぜSSR？なぜLambda？\">なぜSSR？なぜLambda？</a></li>\n<li><a href=\"#サーバー構成\">サーバー構成</a></li>\n<li><a href=\"#実装コードの説明\">実装コードの説明</a></li>\n<li><a href=\"#まとめ\">まとめ</a></li>\n<li><a href=\"#参考記事集\">参考記事集</a></li>\n</ul>\n<h2 id=\"Nuxt.js\">Nuxt.js</h2><p>Nuxt.js は 冒頭でも書いたとおり Vue.js のユニバーサルアプリケーションを作ることができるフレームワークです。\n2017年12月12日現在はまだバージョン1がリリースされていませんが、現時点でも十分に扱える状態にあると思います。\n筆者自信もプロダクション環境で稼働させる準備を進めています。</p>\n<p>その Nuxt.js の特徴を挙げると下記のような感じです。</p>\n<ul>\n<li>SSRサポート</li>\n<li>整った開発環境<ul>\n<li>Babel</li>\n<li>ローカルサーバー（ホットリロード有り）</li>\n</ul>\n</li>\n<li>静的サイトジェネレーター</li>\n</ul>\n<p>とりあえずすごく便利です。\n開発を始めるまでのハードルがすごく低くなっています。\nまた、公式が用意している<a href=\"https://github.com/nuxt-community/starter-template\">スターターテンプレート</a>を使うことで ESLint の設定まで含まれた状態で始めることもできます。</p>\n<p>このサイト自体も Nuxt.js を利用して制作しています。\nまだ開発途中で前に作ったサイトと同居状態なのですが、Nuxt.js の静的サイトジェネレーターの機能を使い、このページだけ独立したHTMLとして出力させてサーバーに置いています。</p>\n<p>今回は主題は Nuxt.js ではないので紹介はこの程度に留めます。\nNuxt.js についてさらに知りたい方は <a href=\"https://twitter.com/potato4d\">potato4d</a>さんの<a href=\"https://html5experts.jp/potato4d/24346/\">Vue.js製フレームワークNuxt.jsではじめるUniversalアプリケーション開発 | HTML5Experts.jp</a>に詳しく書かれているので、そちらをご参照いただくことをオススメします。</p>\n<h2 id=\"AWS_Lambda\">AWS Lambda</h2><p>AWS Lambda はサーバーレスと言われる分野で使われている代表的なサービスです。\n冒頭にも書きましたが、使った分だけ課金される料金体系になっています。</p>\n<p>コードをアップするだけで稼働し、スケーリングも自動で行われるので、サーバーの管理を煩わしく思うような人におすすめです。</p>\n<h2 id=\"Serverless_Framework\">Serverless Framework</h2><p>Serverless Framework は AWS Lambda へのデプロイを手軽に行えるようにしてくれるツールです。\nNode.js の環境があれば動くので、Nuxt.js を使う環境であればすぐに導入できると思います。\nまた、コードベースで設定を管理できるので、同じ環境を作るのも手軽にできます。\n今回の設定などは <a href=\"https://github.com/mya-ake/nuxt-on-lambda\">GitHub</a>に置いているので、ほぼそのまま使うことができると思います。</p>\n<h2 id=\"なぜSSR？なぜLambda？\">なぜSSR？なぜLambda？</h2><p>なぜSSRするか、なぜLambdaを使うかという話は、<a href=\"https://serverless.connpass.com/event/62473/\">Serverless Meetup Fukuoka #1</a>というイベントで<a href=\"https://mya-ake.com/slides/vuejs-ssr-on-lambda\">AWS LambdaでSSRやってみた Vue.js編</a>という発表をしてきたので、そちらをご覧いただけると幸いです。</p>\n<p>ざっくりなぜSSRするかをまとめると</p>\n<ul>\n<li>Googlebotに正しくサイトを認識してもらうため</li>\n<li>ファーストビューの速度改善</li>\n<li>OGPへの対応</li>\n</ul>\n<p>ざっくりなぜLambdaを使うかをまとめると</p>\n<ul>\n<li>1リクエストで1Lambdaが動くので、突発的なアクセスなどに強い</li>\n<li>サーバーの管理をあまりしたくない</li>\n<li>安い</li>\n</ul>\n<h2 id=\"サーバー構成\">サーバー構成</h2><h2 id=\"実装コードの説明\">実装コードの説明</h2><pre><code class=\"hljs lang-JavaScript\"><span class=\"hljs-meta\">'use strict'</span>\n\n<span class=\"hljs-keyword\">const</span> { Nuxt } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'nuxt'</span>)\n<span class=\"hljs-keyword\">const</span> express = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'express'</span>)\n<span class=\"hljs-keyword\">const</span> config = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'./../nuxt.config.js'</span>)\n\n<span class=\"hljs-keyword\">const</span> app = express()\n\n<span class=\"hljs-keyword\">const</span> setHeaders = <span class=\"hljs-function\">(<span class=\"hljs-params\">req, res, next</span>) =&gt;</span> {\n  res.removeHeader(<span class=\"hljs-string\">'x-powered-by'</span>)\n  res.header(<span class=\"hljs-string\">'no-cache'</span>, <span class=\"hljs-string\">'Set-Cookie'</span>)\n  res.header(<span class=\"hljs-string\">'x-xss-protection'</span>, <span class=\"hljs-string\">'1; mode=block'</span>)\n  res.header(<span class=\"hljs-string\">'x-frame-options'</span>, <span class=\"hljs-string\">'DENY'</span>)\n  res.header(<span class=\"hljs-string\">'x-content-type-options'</span>, <span class=\"hljs-string\">'nosniff'</span>)\n  res.header(<span class=\"hljs-string\">'Cache-Control'</span>, <span class=\"hljs-string\">'max-age=120'</span>)\n  next()\n}\n\napp.use(setHeaders)\n\n<span class=\"hljs-keyword\">const</span> BASE_PATH = process.env.BASE_URL\n<span class=\"hljs-keyword\">const</span> REGEXP_BASE_PATH = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">RegExp</span>(<span class=\"hljs-string\">`^<span class=\"hljs-subst\">${BASE_PATH}</span>`</span>)\n\n<span class=\"hljs-keyword\">const</span> buildPath = <span class=\"hljs-function\">(<span class=\"hljs-params\">originalPath</span>) =&gt;</span> {\n  <span class=\"hljs-keyword\">if</span> (REGEXP_BASE_PATH.test(originalPath) === <span class=\"hljs-literal\">true</span>) {\n    <span class=\"hljs-keyword\">return</span> originalPath\n  }\n  <span class=\"hljs-keyword\">const</span> basePath = BASE_PATH.replace(<span class=\"hljs-regexp\">/\\/$/</span>, <span class=\"hljs-string\">''</span>)\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`<span class=\"hljs-subst\">${basePath}</span><span class=\"hljs-subst\">${originalPath}</span>`</span>\n}\n\nconfig.dev = <span class=\"hljs-literal\">false</span>\n<span class=\"hljs-keyword\">const</span> nuxt = <span class=\"hljs-keyword\">new</span> Nuxt(config)\n\napp.use(<span class=\"hljs-function\">(<span class=\"hljs-params\">req, res, next</span>) =&gt;</span> {\n  req.url = buildPath(req.url)\n  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'Request URL: '</span>, req.url)\n\n  nuxt.render(req, res, next)\n})\n\n<span class=\"hljs-built_in\">module</span>.exports.app = app\n</code></pre>\n<h2 id=\"まとめ\">まとめ</h2><h2 id=\"参考記事集\">参考記事集</h2><ul>\n<li><a href=\"https://nuxtjs.org/\">Nuxt.js - Universal Vue.js Applications</a></li>\n<li><a href=\"https://aws.amazon.com/jp/lambda/\">AWS Lambda (サーバーレスでコードを実行・自動管理) | AWS</a></li>\n<li><a href=\"https://html5experts.jp/potato4d/24346/\">Vue.js製フレームワークNuxt.jsではじめるUniversalアプリケーション開発 | HTML5Experts.jp</a></li>\n<li><a href=\"https://mya-ake.com/slides/vuejs-ssr-on-lambda\">AWS LambdaでSSRやってみた Vue.js編</a></li>\n</ul>","createdAt":"2017-12-12"}